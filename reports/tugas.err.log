Traceback (most recent call last):
  File "/usr/local/python/3.12.1/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/python/3.12.1/lib/python3.12/asyncio/base_events.py", line 684, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Ambil data dari MySQL
mysql_query = "SELECT * FROM iris_data"
mysql_df = pd.read_sql(mysql_query, mysql_engine)

# Ambil data dari PostgreSQL
pg_query = "SELECT * FROM postgresql"
pg_df = pd.read_sql(pg_query, postgres_engine)

print(mysql_df)
print()
print(pg_df)
------------------


[31m---------------------------------------------------------------------------[39m
[31mgaierror[39m                                  Traceback (most recent call last)
[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/pymysql/connections.py:649[39m, in [36mConnection.connect[39m[34m(self, sock)[39m
[32m    648[39m [38;5;28;01mtry[39;00m:
[32m--> [39m[32m649[39m     sock = [43msocket[49m[43m.[49m[43mcreate_connection[49m[43m([49m
[32m    650[39m [43m        [49m[43m([49m[38;5;28;43mself[39;49m[43m.[49m[43mhost[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[43m.[49m[43mport[49m[43m)[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[43m.[49m[43mconnect_timeout[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m
[32m    651[39m [43m    [49m[43m)[49m
[32m    652[39m     [38;5;28;01mbreak[39;00m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/socket.py:828[39m, in [36mcreate_connection[39m[34m(address, timeout, source_address, all_errors)[39m
[32m    827[39m exceptions = []
[32m--> [39m[32m828[39m [38;5;28;01mfor[39;00m res [38;5;129;01min[39;00m [43mgetaddrinfo[49m[43m([49m[43mhost[49m[43m,[49m[43m [49m[43mport[49m[43m,[49m[43m [49m[32;43m0[39;49m[43m,[49m[43m [49m[43mSOCK_STREAM[49m[43m)[49m:
[32m    829[39m     af, socktype, proto, canonname, sa = res

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/socket.py:963[39m, in [36mgetaddrinfo[39m[34m(host, port, family, type, proto, flags)[39m
[32m    962[39m addrlist = []
[32m--> [39m[32m963[39m [38;5;28;01mfor[39;00m res [38;5;129;01min[39;00m [43m_socket[49m[43m.[49m[43mgetaddrinfo[49m[43m([49m[43mhost[49m[43m,[49m[43m [49m[43mport[49m[43m,[49m[43m [49m[43mfamily[49m[43m,[49m[43m [49m[38;5;28;43mtype[39;49m[43m,[49m[43m [49m[43mproto[49m[43m,[49m[43m [49m[43mflags[49m[43m)[49m:
[32m    964[39m     af, socktype, proto, canonname, sa = res

[31mgaierror[39m: [Errno -2] Name or service not known

During handling of the above exception, another exception occurred:

[31mOperationalError[39m                          Traceback (most recent call last)
[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/engine/base.py:146[39m, in [36mConnection.__init__[39m[34m(self, engine, connection, _has_events, _allow_revalidate, _allow_autobegin)[39m
[32m    145[39m [38;5;28;01mtry[39;00m:
[32m--> [39m[32m146[39m     [38;5;28mself[39m._dbapi_connection = [43mengine[49m[43m.[49m[43mraw_connection[49m[43m([49m[43m)[49m
[32m    147[39m [38;5;28;01mexcept[39;00m dialect.loaded_dbapi.Error [38;5;28;01mas[39;00m err:

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/engine/base.py:3298[39m, in [36mEngine.raw_connection[39m[34m(self)[39m
[32m   3277[39m [38;5;250m[39m[33;03m"""Return a "raw" DBAPI connection from the connection pool.[39;00m
[32m   3278[39m 
[32m   3279[39m [33;03mThe returned object is a proxied version of the DBAPI[39;00m
[32m   (...)[39m[32m   3296[39m 
[32m   3297[39m [33;03m"""[39;00m
[32m-> [39m[32m3298[39m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43mpool[49m[43m.[49m[43mconnect[49m[43m([49m[43m)[49m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/pool/base.py:449[39m, in [36mPool.connect[39m[34m(self)[39m
[32m    442[39m [38;5;250m[39m[33;03m"""Return a DBAPI connection from the pool.[39;00m
[32m    443[39m 
[32m    444[39m [33;03mThe connection is instrumented such that when its[39;00m
[32m   (...)[39m[32m    447[39m 
[32m    448[39m [33;03m"""[39;00m
[32m--> [39m[32m449[39m [38;5;28;01mreturn[39;00m [43m_ConnectionFairy[49m[43m.[49m[43m_checkout[49m[43m([49m[38;5;28;43mself[39;49m[43m)[49m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/pool/base.py:1264[39m, in [36m_ConnectionFairy._checkout[39m[34m(cls, pool, threadconns, fairy)[39m
[32m   1263[39m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m fairy:
[32m-> [39m[32m1264[39m     fairy = [43m_ConnectionRecord[49m[43m.[49m[43mcheckout[49m[43m([49m[43mpool[49m[43m)[49m
[32m   1266[39m     [38;5;28;01mif[39;00m threadconns [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/pool/base.py:713[39m, in [36m_ConnectionRecord.checkout[39m[34m(cls, pool)[39m
[32m    712[39m [38;5;28;01melse[39;00m:
[32m--> [39m[32m713[39m     rec = [43mpool[49m[43m.[49m[43m_do_get[49m[43m([49m[43m)[49m
[32m    715[39m [38;5;28;01mtry[39;00m:

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/pool/impl.py:179[39m, in [36mQueuePool._do_get[39m[34m(self)[39m
[32m    178[39m [38;5;28;01mexcept[39;00m:
[32m--> [39m[32m179[39m [43m    [49m[38;5;28;43;01mwith[39;49;00m[43m [49m[43mutil[49m[43m.[49m[43msafe_reraise[49m[43m([49m[43m)[49m[43m:[49m
[32m    180[39m [43m        [49m[38;5;28;43mself[39;49m[43m.[49m[43m_dec_overflow[49m[43m([49m[43m)[49m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/util/langhelpers.py:146[39m, in [36msafe_reraise.__exit__[39m[34m(self, type_, value, traceback)[39m
[32m    145[39m     [38;5;28mself[39m._exc_info = [38;5;28;01mNone[39;00m  [38;5;66;03m# remove potential circular references[39;00m
[32m--> [39m[32m146[39m     [38;5;28;01mraise[39;00m exc_value.with_traceback(exc_tb)
[32m    147[39m [38;5;28;01melse[39;00m:

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/pool/impl.py:177[39m, in [36mQueuePool._do_get[39m[34m(self)[39m
[32m    176[39m [38;5;28;01mtry[39;00m:
[32m--> [39m[32m177[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43m_create_connection[49m[43m([49m[43m)[49m
[32m    178[39m [38;5;28;01mexcept[39;00m:

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/pool/base.py:390[39m, in [36mPool._create_connection[39m[34m(self)[39m
[32m    388[39m [38;5;250m[39m[33;03m"""Called by subclasses to create a new ConnectionRecord."""[39;00m
[32m--> [39m[32m390[39m [38;5;28;01mreturn[39;00m [43m_ConnectionRecord[49m[43m([49m[38;5;28;43mself[39;49m[43m)[49m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/pool/base.py:675[39m, in [36m_ConnectionRecord.__init__[39m[34m(self, pool, connect)[39m
[32m    674[39m [38;5;28;01mif[39;00m connect:
[32m--> [39m[32m675[39m     [38;5;28;43mself[39;49m[43m.[49m[43m__connect[49m[43m([49m[43m)[49m
[32m    676[39m [38;5;28mself[39m.finalize_callback = deque()

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/pool/base.py:901[39m, in [36m_ConnectionRecord.__connect[39m[34m(self)[39m
[32m    900[39m [38;5;28;01mexcept[39;00m [38;5;167;01mBaseException[39;00m [38;5;28;01mas[39;00m e:
[32m--> [39m[32m901[39m [43m    [49m[38;5;28;43;01mwith[39;49;00m[43m [49m[43mutil[49m[43m.[49m[43msafe_reraise[49m[43m([49m[43m)[49m[43m:[49m
[32m    902[39m [43m        [49m[43mpool[49m[43m.[49m[43mlogger[49m[43m.[49m[43mdebug[49m[43m([49m[33;43m"[39;49m[33;43mError on connect(): [39;49m[38;5;132;43;01m%s[39;49;00m[33;43m"[39;49m[43m,[49m[43m [49m[43me[49m[43m)[49m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/util/langhelpers.py:146[39m, in [36msafe_reraise.__exit__[39m[34m(self, type_, value, traceback)[39m
[32m    145[39m     [38;5;28mself[39m._exc_info = [38;5;28;01mNone[39;00m  [38;5;66;03m# remove potential circular references[39;00m
[32m--> [39m[32m146[39m     [38;5;28;01mraise[39;00m exc_value.with_traceback(exc_tb)
[32m    147[39m [38;5;28;01melse[39;00m:

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/pool/base.py:897[39m, in [36m_ConnectionRecord.__connect[39m[34m(self)[39m
[32m    896[39m [38;5;28mself[39m.starttime = time.time()
[32m--> [39m[32m897[39m [38;5;28mself[39m.dbapi_connection = connection = [43mpool[49m[43m.[49m[43m_invoke_creator[49m[43m([49m[38;5;28;43mself[39;49m[43m)[49m
[32m    898[39m pool.logger.debug([33m"[39m[33mCreated new connection [39m[38;5;132;01m%r[39;00m[33m"[39m, connection)

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/engine/create.py:646[39m, in [36mcreate_engine.<locals>.connect[39m[34m(connection_record)[39m
[32m    644[39m             [38;5;28;01mreturn[39;00m connection
[32m--> [39m[32m646[39m [38;5;28;01mreturn[39;00m [43mdialect[49m[43m.[49m[43mconnect[49m[43m([49m[43m*[49m[43mcargs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mcparams[49m[43m)[49m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/engine/default.py:625[39m, in [36mDefaultDialect.connect[39m[34m(self, *cargs, **cparams)[39m
[32m    623[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mconnect[39m([38;5;28mself[39m, *cargs: Any, **cparams: Any) -> DBAPIConnection:
[32m    624[39m     [38;5;66;03m# inherits the docstring from interfaces.Dialect.connect[39;00m
[32m--> [39m[32m625[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43mloaded_dbapi[49m[43m.[49m[43mconnect[49m[43m([49m[43m*[49m[43mcargs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mcparams[49m[43m)[49m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/pymysql/connections.py:361[39m, in [36mConnection.__init__[39m[34m(self, user, password, host, database, unix_socket, port, charset, collation, sql_mode, read_default_file, conv, use_unicode, client_flag, cursorclass, init_command, connect_timeout, read_default_group, autocommit, local_infile, max_allowed_packet, defer_connect, auth_plugin_map, read_timeout, write_timeout, bind_address, binary_prefix, program_name, server_public_key, ssl, ssl_ca, ssl_cert, ssl_disabled, ssl_key, ssl_key_password, ssl_verify_cert, ssl_verify_identity, compress, named_pipe, passwd, db)[39m
[32m    360[39m [38;5;28;01melse[39;00m:
[32m--> [39m[32m361[39m     [38;5;28;43mself[39;49m[43m.[49m[43mconnect[49m[43m([49m[43m)[49m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/pymysql/connections.py:716[39m, in [36mConnection.connect[39m[34m(self, sock)[39m
[32m    715[39m         [38;5;28mprint[39m(exc.traceback)
[32m--> [39m[32m716[39m     [38;5;28;01mraise[39;00m exc
[32m    718[39m [38;5;66;03m# If e is neither DatabaseError or IOError, It's a bug.[39;00m
[32m    719[39m [38;5;66;03m# But raising AssertionError hides original error.[39;00m
[32m    720[39m [38;5;66;03m# So just reraise it.[39;00m

[31mOperationalError[39m: (2003, "Can't connect to MySQL server on 'mysql-b2a9b82-iris-mysql.g.aivencloud.com' ([Errno -2] Name or service not known)")

The above exception was the direct cause of the following exception:

[31mOperationalError[39m                          Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[8][39m[32m, line 3[39m
[32m      1[39m [38;5;66;03m# Ambil data dari MySQL[39;00m
[32m      2[39m mysql_query = [33m"[39m[33mSELECT * FROM iris_data[39m[33m"[39m
[32m----> [39m[32m3[39m mysql_df = [43mpd[49m[43m.[49m[43mread_sql[49m[43m([49m[43mmysql_query[49m[43m,[49m[43m [49m[43mmysql_engine[49m[43m)[49m
[32m      5[39m [38;5;66;03m# Ambil data dari PostgreSQL[39;00m
[32m      6[39m pg_query = [33m"[39m[33mSELECT * FROM postgresql[39m[33m"[39m

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/pandas/io/sql.py:704[39m, in [36mread_sql[39m[34m(sql, con, index_col, coerce_float, params, parse_dates, columns, chunksize, dtype_backend, dtype)[39m
[32m    701[39m     dtype_backend = [33m"[39m[33mnumpy[39m[33m"[39m  [38;5;66;03m# type: ignore[assignment][39;00m
[32m    702[39m [38;5;28;01massert[39;00m dtype_backend [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m lib.no_default
[32m--> [39m[32m704[39m [38;5;28;01mwith[39;00m [43mpandasSQL_builder[49m[43m([49m[43mcon[49m[43m)[49m [38;5;28;01mas[39;00m pandas_sql:
[32m    705[39m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(pandas_sql, SQLiteDatabase):
[32m    706[39m         [38;5;28;01mreturn[39;00m pandas_sql.read_query(
[32m    707[39m             sql,
[32m    708[39m             index_col=index_col,
[32m   (...)[39m[32m    714[39m             dtype=dtype,
[32m    715[39m         )

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/pandas/io/sql.py:906[39m, in [36mpandasSQL_builder[39m[34m(con, schema, need_transaction)[39m
[32m    903[39m     [38;5;28;01mraise[39;00m [38;5;167;01mImportError[39;00m([33m"[39m[33mUsing URI string without sqlalchemy installed.[39m[33m"[39m)
[32m    905[39m [38;5;28;01mif[39;00m sqlalchemy [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m [38;5;28misinstance[39m(con, ([38;5;28mstr[39m, sqlalchemy.engine.Connectable)):
[32m--> [39m[32m906[39m     [38;5;28;01mreturn[39;00m [43mSQLDatabase[49m[43m([49m[43mcon[49m[43m,[49m[43m [49m[43mschema[49m[43m,[49m[43m [49m[43mneed_transaction[49m[43m)[49m
[32m    908[39m adbc = import_optional_dependency([33m"[39m[33madbc_driver_manager.dbapi[39m[33m"[39m, errors=[33m"[39m[33mignore[39m[33m"[39m)
[32m    909[39m [38;5;28;01mif[39;00m adbc [38;5;129;01mand[39;00m [38;5;28misinstance[39m(con, adbc.Connection):

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/pandas/io/sql.py:1636[39m, in [36mSQLDatabase.__init__[39m[34m(self, con, schema, need_transaction)[39m
[32m   1634[39m     [38;5;28mself[39m.exit_stack.callback(con.dispose)
[32m   1635[39m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(con, Engine):
[32m-> [39m[32m1636[39m     con = [38;5;28mself[39m.exit_stack.enter_context([43mcon[49m[43m.[49m[43mconnect[49m[43m([49m[43m)[49m)
[32m   1637[39m [38;5;28;01mif[39;00m need_transaction [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m con.in_transaction():
[32m   1638[39m     [38;5;28mself[39m.exit_stack.enter_context(con.begin())

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/engine/base.py:3274[39m, in [36mEngine.connect[39m[34m(self)[39m
[32m   3251[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mconnect[39m([38;5;28mself[39m) -> Connection:
[32m   3252[39m [38;5;250m    [39m[33;03m"""Return a new :class:`_engine.Connection` object.[39;00m
[32m   3253[39m 
[32m   3254[39m [33;03m    The :class:`_engine.Connection` acts as a Python context manager, so[39;00m
[32m   (...)[39m[32m   3271[39m 
[32m   3272[39m [33;03m    """[39;00m
[32m-> [39m[32m3274[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43m_connection_cls[49m[43m([49m[38;5;28;43mself[39;49m[43m)[49m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/engine/base.py:148[39m, in [36mConnection.__init__[39m[34m(self, engine, connection, _has_events, _allow_revalidate, _allow_autobegin)[39m
[32m    146[39m         [38;5;28mself[39m._dbapi_connection = engine.raw_connection()
[32m    147[39m     [38;5;28;01mexcept[39;00m dialect.loaded_dbapi.Error [38;5;28;01mas[39;00m err:
[32m--> [39m[32m148[39m         [43mConnection[49m[43m.[49m[43m_handle_dbapi_exception_noconnection[49m[43m([49m
[32m    149[39m [43m            [49m[43merr[49m[43m,[49m[43m [49m[43mdialect[49m[43m,[49m[43m [49m[43mengine[49m
[32m    150[39m [43m        [49m[43m)[49m
[32m    151[39m         [38;5;28;01mraise[39;00m
[32m    152[39m [38;5;28;01melse[39;00m:

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2439[39m, in [36mConnection._handle_dbapi_exception_noconnection[39m[34m(cls, e, dialect, engine, is_disconnect, invalidate_pool_on_disconnect, is_pre_ping)[39m
[32m   2437[39m [38;5;28;01melif[39;00m should_wrap:
[32m   2438[39m     [38;5;28;01massert[39;00m sqlalchemy_exception [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m
[32m-> [39m[32m2439[39m     [38;5;28;01mraise[39;00m sqlalchemy_exception.with_traceback(exc_info[[32m2[39m]) [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01me[39;00m
[32m   2440[39m [38;5;28;01melse[39;00m:
[32m   2441[39m     [38;5;28;01massert[39;00m exc_info[[32m1[39m] [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/engine/base.py:146[39m, in [36mConnection.__init__[39m[34m(self, engine, connection, _has_events, _allow_revalidate, _allow_autobegin)[39m
[32m    144[39m [38;5;28;01mif[39;00m connection [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[32m    145[39m     [38;5;28;01mtry[39;00m:
[32m--> [39m[32m146[39m         [38;5;28mself[39m._dbapi_connection = [43mengine[49m[43m.[49m[43mraw_connection[49m[43m([49m[43m)[49m
[32m    147[39m     [38;5;28;01mexcept[39;00m dialect.loaded_dbapi.Error [38;5;28;01mas[39;00m err:
[32m    148[39m         Connection._handle_dbapi_exception_noconnection(
[32m    149[39m             err, dialect, engine
[32m    150[39m         )

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/engine/base.py:3298[39m, in [36mEngine.raw_connection[39m[34m(self)[39m
[32m   3276[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mraw_connection[39m([38;5;28mself[39m) -> PoolProxiedConnection:
[32m   3277[39m [38;5;250m    [39m[33;03m"""Return a "raw" DBAPI connection from the connection pool.[39;00m
[32m   3278[39m 
[32m   3279[39m [33;03m    The returned object is a proxied version of the DBAPI[39;00m
[32m   (...)[39m[32m   3296[39m 
[32m   3297[39m [33;03m    """[39;00m
[32m-> [39m[32m3298[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43mpool[49m[43m.[49m[43mconnect[49m[43m([49m[43m)[49m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/pool/base.py:449[39m, in [36mPool.connect[39m[34m(self)[39m
[32m    441[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mconnect[39m([38;5;28mself[39m) -> PoolProxiedConnection:
[32m    442[39m [38;5;250m    [39m[33;03m"""Return a DBAPI connection from the pool.[39;00m
[32m    443[39m 
[32m    444[39m [33;03m    The connection is instrumented such that when its[39;00m
[32m   (...)[39m[32m    447[39m 
[32m    448[39m [33;03m    """[39;00m
[32m--> [39m[32m449[39m     [38;5;28;01mreturn[39;00m [43m_ConnectionFairy[49m[43m.[49m[43m_checkout[49m[43m([49m[38;5;28;43mself[39;49m[43m)[49m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/pool/base.py:1264[39m, in [36m_ConnectionFairy._checkout[39m[34m(cls, pool, threadconns, fairy)[39m
[32m   1256[39m [38;5;129m@classmethod[39m
[32m   1257[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m_checkout[39m(
[32m   1258[39m     [38;5;28mcls[39m,
[32m   (...)[39m[32m   1261[39m     fairy: Optional[_ConnectionFairy] = [38;5;28;01mNone[39;00m,
[32m   1262[39m ) -> _ConnectionFairy:
[32m   1263[39m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m fairy:
[32m-> [39m[32m1264[39m         fairy = [43m_ConnectionRecord[49m[43m.[49m[43mcheckout[49m[43m([49m[43mpool[49m[43m)[49m
[32m   1266[39m         [38;5;28;01mif[39;00m threadconns [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m   1267[39m             threadconns.current = weakref.ref(fairy)

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/pool/base.py:713[39m, in [36m_ConnectionRecord.checkout[39m[34m(cls, pool)[39m
[32m    711[39m     rec = cast(_ConnectionRecord, pool._do_get())
[32m    712[39m [38;5;28;01melse[39;00m:
[32m--> [39m[32m713[39m     rec = [43mpool[49m[43m.[49m[43m_do_get[49m[43m([49m[43m)[49m
[32m    715[39m [38;5;28;01mtry[39;00m:
[32m    716[39m     dbapi_connection = rec.get_connection()

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/pool/impl.py:179[39m, in [36mQueuePool._do_get[39m[34m(self)[39m
[32m    177[39m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m._create_connection()
[32m    178[39m [38;5;28;01mexcept[39;00m:
[32m--> [39m[32m179[39m [43m    [49m[38;5;28;43;01mwith[39;49;00m[43m [49m[43mutil[49m[43m.[49m[43msafe_reraise[49m[43m([49m[43m)[49m[43m:[49m
[32m    180[39m [43m        [49m[38;5;28;43mself[39;49m[43m.[49m[43m_dec_overflow[49m[43m([49m[43m)[49m
[32m    181[39m     [38;5;28;01mraise[39;00m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/util/langhelpers.py:146[39m, in [36msafe_reraise.__exit__[39m[34m(self, type_, value, traceback)[39m
[32m    144[39m     [38;5;28;01massert[39;00m exc_value [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m
[32m    145[39m     [38;5;28mself[39m._exc_info = [38;5;28;01mNone[39;00m  [38;5;66;03m# remove potential circular references[39;00m
[32m--> [39m[32m146[39m     [38;5;28;01mraise[39;00m exc_value.with_traceback(exc_tb)
[32m    147[39m [38;5;28;01melse[39;00m:
[32m    148[39m     [38;5;28mself[39m._exc_info = [38;5;28;01mNone[39;00m  [38;5;66;03m# remove potential circular references[39;00m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/pool/impl.py:177[39m, in [36mQueuePool._do_get[39m[34m(self)[39m
[32m    175[39m [38;5;28;01mif[39;00m [38;5;28mself[39m._inc_overflow():
[32m    176[39m     [38;5;28;01mtry[39;00m:
[32m--> [39m[32m177[39m         [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43m_create_connection[49m[43m([49m[43m)[49m
[32m    178[39m     [38;5;28;01mexcept[39;00m:
[32m    179[39m         [38;5;28;01mwith[39;00m util.safe_reraise():

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/pool/base.py:390[39m, in [36mPool._create_connection[39m[34m(self)[39m
[32m    387[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m_create_connection[39m([38;5;28mself[39m) -> ConnectionPoolEntry:
[32m    388[39m [38;5;250m    [39m[33;03m"""Called by subclasses to create a new ConnectionRecord."""[39;00m
[32m--> [39m[32m390[39m     [38;5;28;01mreturn[39;00m [43m_ConnectionRecord[49m[43m([49m[38;5;28;43mself[39;49m[43m)[49m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/pool/base.py:675[39m, in [36m_ConnectionRecord.__init__[39m[34m(self, pool, connect)[39m
[32m    673[39m [38;5;28mself[39m.__pool = pool
[32m    674[39m [38;5;28;01mif[39;00m connect:
[32m--> [39m[32m675[39m     [38;5;28;43mself[39;49m[43m.[49m[43m__connect[49m[43m([49m[43m)[49m
[32m    676[39m [38;5;28mself[39m.finalize_callback = deque()

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/pool/base.py:901[39m, in [36m_ConnectionRecord.__connect[39m[34m(self)[39m
[32m    899[39m     [38;5;28mself[39m.fresh = [38;5;28;01mTrue[39;00m
[32m    900[39m [38;5;28;01mexcept[39;00m [38;5;167;01mBaseException[39;00m [38;5;28;01mas[39;00m e:
[32m--> [39m[32m901[39m [43m    [49m[38;5;28;43;01mwith[39;49;00m[43m [49m[43mutil[49m[43m.[49m[43msafe_reraise[49m[43m([49m[43m)[49m[43m:[49m
[32m    902[39m [43m        [49m[43mpool[49m[43m.[49m[43mlogger[49m[43m.[49m[43mdebug[49m[43m([49m[33;43m"[39;49m[33;43mError on connect(): [39;49m[38;5;132;43;01m%s[39;49;00m[33;43m"[39;49m[43m,[49m[43m [49m[43me[49m[43m)[49m
[32m    903[39m [38;5;28;01melse[39;00m:
[32m    904[39m     [38;5;66;03m# in SQLAlchemy 1.4 the first_connect event is not used by[39;00m
[32m    905[39m     [38;5;66;03m# the engine, so this will usually not be set[39;00m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/util/langhelpers.py:146[39m, in [36msafe_reraise.__exit__[39m[34m(self, type_, value, traceback)[39m
[32m    144[39m     [38;5;28;01massert[39;00m exc_value [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m
[32m    145[39m     [38;5;28mself[39m._exc_info = [38;5;28;01mNone[39;00m  [38;5;66;03m# remove potential circular references[39;00m
[32m--> [39m[32m146[39m     [38;5;28;01mraise[39;00m exc_value.with_traceback(exc_tb)
[32m    147[39m [38;5;28;01melse[39;00m:
[32m    148[39m     [38;5;28mself[39m._exc_info = [38;5;28;01mNone[39;00m  [38;5;66;03m# remove potential circular references[39;00m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/pool/base.py:897[39m, in [36m_ConnectionRecord.__connect[39m[34m(self)[39m
[32m    895[39m [38;5;28;01mtry[39;00m:
[32m    896[39m     [38;5;28mself[39m.starttime = time.time()
[32m--> [39m[32m897[39m     [38;5;28mself[39m.dbapi_connection = connection = [43mpool[49m[43m.[49m[43m_invoke_creator[49m[43m([49m[38;5;28;43mself[39;49m[43m)[49m
[32m    898[39m     pool.logger.debug([33m"[39m[33mCreated new connection [39m[38;5;132;01m%r[39;00m[33m"[39m, connection)
[32m    899[39m     [38;5;28mself[39m.fresh = [38;5;28;01mTrue[39;00m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/engine/create.py:646[39m, in [36mcreate_engine.<locals>.connect[39m[34m(connection_record)[39m
[32m    643[39m         [38;5;28;01mif[39;00m connection [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m    644[39m             [38;5;28;01mreturn[39;00m connection
[32m--> [39m[32m646[39m [38;5;28;01mreturn[39;00m [43mdialect[49m[43m.[49m[43mconnect[49m[43m([49m[43m*[49m[43mcargs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mcparams[49m[43m)[49m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/sqlalchemy/engine/default.py:625[39m, in [36mDefaultDialect.connect[39m[34m(self, *cargs, **cparams)[39m
[32m    623[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mconnect[39m([38;5;28mself[39m, *cargs: Any, **cparams: Any) -> DBAPIConnection:
[32m    624[39m     [38;5;66;03m# inherits the docstring from interfaces.Dialect.connect[39;00m
[32m--> [39m[32m625[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43mloaded_dbapi[49m[43m.[49m[43mconnect[49m[43m([49m[43m*[49m[43mcargs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mcparams[49m[43m)[49m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/pymysql/connections.py:361[39m, in [36mConnection.__init__[39m[34m(self, user, password, host, database, unix_socket, port, charset, collation, sql_mode, read_default_file, conv, use_unicode, client_flag, cursorclass, init_command, connect_timeout, read_default_group, autocommit, local_infile, max_allowed_packet, defer_connect, auth_plugin_map, read_timeout, write_timeout, bind_address, binary_prefix, program_name, server_public_key, ssl, ssl_ca, ssl_cert, ssl_disabled, ssl_key, ssl_key_password, ssl_verify_cert, ssl_verify_identity, compress, named_pipe, passwd, db)[39m
[32m    359[39m     [38;5;28mself[39m._sock = [38;5;28;01mNone[39;00m
[32m    360[39m [38;5;28;01melse[39;00m:
[32m--> [39m[32m361[39m     [38;5;28;43mself[39;49m[43m.[49m[43mconnect[49m[43m([49m[43m)[49m

[36mFile [39m[32m/usr/local/python/3.12.1/lib/python3.12/site-packages/pymysql/connections.py:716[39m, in [36mConnection.connect[39m[34m(self, sock)[39m
[32m    714[39m     [38;5;28;01mif[39;00m DEBUG:
[32m    715[39m         [38;5;28mprint[39m(exc.traceback)
[32m--> [39m[32m716[39m     [38;5;28;01mraise[39;00m exc
[32m    718[39m [38;5;66;03m# If e is neither DatabaseError or IOError, It's a bug.[39;00m
[32m    719[39m [38;5;66;03m# But raising AssertionError hides original error.[39;00m
[32m    720[39m [38;5;66;03m# So just reraise it.[39;00m
[32m    721[39m [38;5;28;01mraise[39;00m

[31mOperationalError[39m: (pymysql.err.OperationalError) (2003, "Can't connect to MySQL server on 'mysql-b2a9b82-iris-mysql.g.aivencloud.com' ([Errno -2] Name or service not known)")
(Background on this error at: https://sqlalche.me/e/20/e3q8)

